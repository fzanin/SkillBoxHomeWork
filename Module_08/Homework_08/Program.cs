using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Homework_08
{
    class Program
    {
        static void Main(string[] args)
        {
            /// Создать прототип информационной системы, в которой есть возможност работать со структурой организации
            /// В структуре присутствуют департаменты и сотрудники
            /// Каждый департамент может содержать не более 1_000_000 сотрудников.
            /// У каждого департамента есть поля: наименование, дата создания,
            /// количество сотрудников числящихся в нём 
            /// (можно добавить свои пожелания)
            /// 
            /// У каждого сотрудника есть поля: Фамилия, Имя, Возраст, департамент в котором он числится, 
            /// уникальный номер, размер оплаты труда, количество закрепленным за ним.
            ///
            /// В данной информаиционной системе должна быть возможность 
            /// - импорта и экспорта всей информации в xml и json
            /// Добавление, удаление, редактирование сотрудников и департаментов
            /// 
            /// * Реализовать возможность упорядочивания сотрудников в рамках одно департамента 
            /// по нескольким полям, например возрасту и оплате труда
            /// 
            ///  №     Имя       Фамилия     Возраст     Департамент     Оплата труда    Количество проектов
            ///  1   Имя_1     Фамилия_1          23         Отдел_1            10000                      3 
            ///  2   Имя_2     Фамилия_2          21         Отдел_2            20000                      3 
            ///  3   Имя_3     Фамилия_3          22         Отдел_1            20000                      3 
            ///  4   Имя_4     Фамилия_4          24         Отдел_1            10000                      3 
            ///  5   Имя_5     Фамилия_5          22         Отдел_2            20000                      3 
            ///  6   Имя_6     Фамилия_6          22         Отдел_1            10000                      3 
            ///  7   Имя_7     Фамилия_7          23         Отдел_1            20000                      3 
            ///  8   Имя_8     Фамилия_8          23         Отдел_1            30000                      3 
            ///  9   Имя_9     Фамилия_9          21         Отдел_1            30000                      3 
            /// 10  Имя_10    Фамилия_10          21         Отдел_2            10000                      3 
            /// 
            /// 
            /// Упорядочивание по одному полю возраст
            /// 
            ///  №     Имя       Фамилия     Возраст     Департамент     Оплата труда    Количество проектов
            ///  2   Имя_2     Фамилия_2          21         Отдел_2            20000                      3 
            /// 10  Имя_10    Фамилия_10          21         Отдел_2            10000                      3 
            ///  9   Имя_9     Фамилия_9          21         Отдел_1            30000                      3 
            ///  3   Имя_3     Фамилия_3          22         Отдел_1            20000                      3 
            ///  5   Имя_5     Фамилия_5          22         Отдел_2            20000                      3 
            ///  6   Имя_6     Фамилия_6          22         Отдел_1            10000                      3 
            ///  1   Имя_1     Фамилия_1          23         Отдел_1            10000                      3 
            ///  8   Имя_8     Фамилия_8          23         Отдел_1            30000                      3 
            ///  7   Имя_7     Фамилия_7          23         Отдел_1            20000                      3 
            ///  4   Имя_4     Фамилия_4          24         Отдел_1            10000                      3 
            /// 
            ///
            /// Упорядочивание по полям возраст и оплате труда
            /// 
            ///  №     Имя       Фамилия     Возраст     Департамент     Оплата труда    Количество проектов
            /// 10  Имя_10    Фамилия_10          21         Отдел_2            10000                      3 
            ///  2   Имя_2     Фамилия_2          21         Отдел_2            20000                      3 
            ///  9   Имя_9     Фамилия_9          21         Отдел_1            30000                      3 
            ///  6   Имя_6     Фамилия_6          22         Отдел_1            10000                      3 
            ///  3   Имя_3     Фамилия_3          22         Отдел_1            20000                      3 
            ///  5   Имя_5     Фамилия_5          22         Отдел_2            20000                      3 
            ///  1   Имя_1     Фамилия_1          23         Отдел_1            10000                      3 
            ///  7   Имя_7     Фамилия_7          23         Отдел_1            20000                      3 
            ///  8   Имя_8     Фамилия_8          23         Отдел_1            30000                      3 
            ///  4   Имя_4     Фамилия_4          24         Отдел_1            10000                      3 
            /// 
            /// 
            /// Упорядочивание по полям возраст и оплате труда в рамках одного департамента
            /// 
            ///  №     Имя       Фамилия     Возраст     Департамент     Оплата труда    Количество проектов
            ///  9   Имя_9     Фамилия_9          21         Отдел_1            30000                      3 
            ///  6   Имя_6     Фамилия_6          22         Отдел_1            10000                      3 
            ///  3   Имя_3     Фамилия_3          22         Отдел_1            20000                      3 
            ///  1   Имя_1     Фамилия_1          23         Отдел_1            10000                      3 
            ///  7   Имя_7     Фамилия_7          23         Отдел_1            20000                      3 
            ///  8   Имя_8     Фамилия_8          23         Отдел_1            30000                      3 
            ///  4   Имя_4     Фамилия_4          24         Отдел_1            10000                      3 
            /// 10  Имя_10    Фамилия_10          21         Отдел_2            10000                      3 
            ///  2   Имя_2     Фамилия_2          21         Отдел_2            20000                      3 
            ///  5   Имя_5     Фамилия_5          22         Отдел_2            20000                      3 
            /// 



            //Задача
            //Цели домашнего задания
            //  Работа с различными типами коллекций.
            //  Практические навыки сериализации и десериализации объектов. 


            //Что входит в задание
            //  Задание 1.Работа с листом.
            //  Задание 2.Телефонная книга.
            //  Задание 3.Проверка повторов.
            //  Задание 4.Записная книжка.


            //Задание 1.Работа с листом


            //Что нужно сделать
            //  1. Создайте лист целых чисел.
            //  2. Заполните лист 100 случайными числами в диапазоне от 0 до 100.
            //  3. Выведите коллекцию чисел на экран.
            //  4. Удалите из листа числа, которые больше 25, но меньше 50.
            //  5. Снова выведите числа на экран.


            //Рекомендация
            //Сделайте отдельные методы для заполнения, удаления и вывода на экран.


            //Что оценивается
            //  В программе используется три отдельных метода. 
            //  В качестве хранилища данных используется List.


            //Задание 2.Телефонная книга

            //Что нужно сделать
            //  1.  Пользователю итеративно предлагается вводить в программу номера телефонов и ФИО их владельцев. 
            //  2.  В процессе ввода информация размещается в Dictionary, где ключом является номер телефона, а значением — ФИО владельца. 
            //      Таким образом, у одного владельца может быть несколько номеров телефонов.Признаком того, что пользователь закончил вводить номера телефонов, 
            //      является ввод пустой строки. 
            //  3.  Далее программа предлагает найти владельца по введенному номеру телефона.Пользователь вводит номер телефона и ему выдаётся ФИО владельца.
            //      Если владельца по такому номеру телефона не зарегистрировано, программа выводит на экран соответствующее сообщение.

            //Совет
            //  Для того, чтобы находить значение в Dictionary, нужно использовать TryGetValue.


            //Что оценивается
            //  Программа разделена на логические методы.
            //  ля хранения элементов записной книжки используется Dictionary.


            //Задание 3.Проверка повторов

            //Что нужно сделать
            //Пользователь вводит число.Число сохраняется в HasSet коллекцию.Если такое число уже присутствует в коллекции, то пользователю на экран выводится сообщение,
            //что число уже вводилось ранее. Если числа нет, то появляется сообщение о том, что число успешно сохранено. 


            //Советы и рекомендации
            //Для добавление числа в HasSet используйте метод Add.


            //Что оценивается
            //В программе в качестве коллекции используется HasSet.


            //Задание 4.Записная книжка

            //Что нужно сделать
            //Программа спрашивает у пользователя данные о контакте:

            //              ФИО
            //              Улица
            //              Номер дома
            //              Номер квартиры
            //              Мобильный телефон
            //              Домашний телефон

            //С помощью XElement создайте xml файл, в котором есть введенная информация. XML файл должен содержать следующую структуру:

            //< Person name =”ФИО человека” >
            //      < Address >
            //              < Street > Название улицы </ Street >
            //              < HouseNumber > Номер дома </ HouseNumber >
            //              < FlatNumber > Номер квартиры </ FlatNumber >
            //      </ Address >
            //      < Phones >
            //              < MobilePhone > 89999999999999 </ MobilePhone >
            //              < FlatPhone > 123 - 45 - 67 < FlatPhone >
            //      </ Phones >
            //</ Person >


            //           Советы и рекомендации
            //Заполняйте XElement в ходе заполнения данных. Изучите возможности XElement в документации Microsoft.


            //Что оценивается
            //Программа создаёт Xml файл, содержащий все данные о контакте.



        //public Department имя { get { return _department; } set { _departments = value; } }
        //внутри Departments сделать public Worker имя { get { return _worker; } set { _worker = value; } }
        //и обращаться organisation[i].Departments[j].Workers[k].Name








    }
}
}
